@model Domain.appFacture.FACTDEMANDE

@{
    string actionName = ViewContext.RouteData.GetRequiredString("action");
    ViewBag.Title = "Demandes : " + actionName;
}
<div class="row">
    <div class="col-md-12">
        <ul class="page-breadcrumb breadcrumb" style="margin-top: 0px; margin-bottom: 2px; padding-left: 0px; padding-right: 0px;">
            <li>
                <i class="fa fa-home"></i>
                <a href="@Url.Action("Index", "Home")">
                    Accueil
                </a>
                <i class="fa fa-angle-right"></i>
            </li>
            <li>
                <a href="@Url.Action("Index")">
                    Demandes facture
                </a>
                <i class="fa fa-angle-right"></i>
            </li>
            <li>
                <i class="fa fa-bars"></i>
                <a href="#">
                    Demande facture <small>@actionName</small>
                </a>
            </li>
        </ul>
    </div>
</div>
<div class="portlet box red">
    <div class="portlet-title" style="padding-top: 0px;">
        @*<div class="caption">
                <i class="fa fa-reorder"></i>
                Demande facture <small>@actionName</small>
            </div>*@
    </div>
    <div class="portlet-body form">
        <!-- BEGIN FORM-->
        @using (Html.BeginForm("ValidateEditExport", "Demande", FormMethod.Post, new { @class = "EditForm form-horizontal", enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(c => c.IDDEMANDE)
            <div class="form-body">
                <div class="alert alert-danger display-hide">
                    <button class="close" data-close="alert"></button>
                    Vous avez des erreurs, merci de vérifier!
                </div>
                <div class="alert alert-success display-hide">
                    <button class="close" data-close="alert"></button>
                    Données correctes! transmission en cours!
                </div>
                <div class="form-group">
                    <label class="col-md-3 control-label">Référence</label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(c => c.REFERENCEFACT, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 control-label">Désignation<span class="required">*</span></label>

                    <div class="col-md-4">
                        @Html.TextBoxFor(c => c.LIBELLEDEMANDE, new { @class = "form-control required" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 control-label">Chapitre<span class="required">*</span></label>

                    <div class="col-md-4">
                        @Html.DropDownListFor(c => c.IDCAT, new SelectList(ViewBag.listTypes, "IDCAT", "LIBELLE"), new { @class = "form-control form-filter input-sm" })
                    </div>
                </div>
                @*<div class="form-group">
                        <label class="col-md-3 control-label">Chapitre<span class="required">*</span></label>

                        <div class="col-md-4">
                            @Html.TextBoxFor(c => c.CHAPITRE, new { @class = "form-control required" })
                        </div>
                    </div>*@
                @if (User.IsInRole("SIEGE"))
                {
                    <div class="form-group">
                        <label class="col-md-3 control-label">Vendeur prestation<span class="required">*</span></label>
                        <div class="col-md-4">
                            @Html.DropDownListFor(c => c.IDSITE, new MultiSelectList(ViewBag.listclientsinterne, "IDSITE", "LIBELLESITE"), new { @class = "form-control required select2me" })
                        </div>
                    </div>
                }
                <div class="form-group statcli">
                    <label class="col-md-3 control-label">Cnuf vendeur<span class="required">*</span></label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(c => c.CNUFVENDEUR, new { @class = "form-control number" })
                    </div>
                </div>
                <div class="form-group statcli">
                    <label class="col-md-3 control-label">Rayon vendeur</label>

                    <div class="col-md-4">
                        @Html.TextBoxFor(c => c.RAYON, new { @class = "form-control number" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 control-label">Type client<span class="required">*</span></label>
                    <div class="col-md-4">
                        @Html.DropDownListFor(c => c.TYPECLIENT, new SelectList(ViewBag.listTypesclient, "TYPE", "LIBELLE"), new { @class = "form-control form-filter input-sm" })
                    </div>
                </div>
                <div class="form-group interne">
                    <label class="col-md-3 control-label">Identifiant client<span class="required">*</span></label>
                    <div class="col-md-4">
                        @Html.DropDownListFor(c => c.IDCLIENTINTERNE, new MultiSelectList(ViewBag.listclientsinterne, "IDSITE", "LIBELLESITE"), new { @class = "form-control required select2me" })
                    </div>
                </div>
                <div class="form-group externe">
                    <label class="col-md-3 control-label">Identifiant client<span class="required">*</span></label>

                    <div class="col-md-4">
                        <table>
                            <tr>
                                <td width="95%">
                                    @Html.Hidden("selectedClient", "")
                                    @Html.DropDownListFor(c => c.IDCLIENT, new MultiSelectList(ViewBag.listclients, "IDCLIENT", "DESIGNATIONCLIENT"), new { @class = "form-control required select2me" })
                                </td>
                                <td>
                                    <a data-toggle="modal" data-target="#idvalid" href="#" title="Ajouter un client" class="btn default grey">
                                        <i class="fa fa-plus"></i>
                                    </a>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="form-group statcli">
                    <label class="col-md-3 control-label">Cnuf acheteur<span class="required">*</span></label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(c => c.CNUFACHETEUR, new { @class = "form-control number" })
                    </div>
                </div>
                <div class="form-group statcli">
                    <label class="col-md-3 control-label">Rayon acheteur</label>

                    <div class="col-md-4">
                        @Html.TextBoxFor(c => c.RAYONACHETEUR, new { @class = "form-control number" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 control-label">Année prestation</label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(c => c.ANNEEPRESTATION, new { @class = "form-control number" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-md-3 control-label hidden"></label>
                    <div class="col-md-4">
                        @Html.DropDownListFor(c => c.IDSITE2, new SelectList(ViewBag.listsite, "ADRLINE1", "LIBELLESITE"), new { @class = "form-control form-filter input-sm hidden" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-md-3 control-label">Fichier Excel</label>
                    <div class="col-md-4">
                        @foreach (var item in Model.FACTPIECEJOINTE)
                        {
                            <a href="@Url.Action("DownloadPJ", new { idFichier = item.IDPIECEJOINTE })" title="telecharger le fichier">
                                @item.NOM
                            </a>
                        }
                        @if (!Model.FACTPIECEJOINTE.Any())
                        {
                            <div class="fileinput fileinput-new" data-provides="fileinput">
                                <div class="input-group input-large">
                                    <div class="form-control uneditable-input input-fixed input-medium" data-trigger="fileinput">
                                        <i class="fa fa-file fileinput-exists"></i>&nbsp;
                                        <span class="fileinput-filename"> </span>
                                    </div>
                                    <span class="input-group-addon btn default btn-file">
                                        <span class="fileinput-new"> Selectionner...</span>
                                        <span class="fileinput-exists"> Changer... </span>
                                        <input type="file" id="mafile" name="file" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel">
                                    </span>
                                    <a href="javascript:;" class="input-group-addon btn red fileinput-exists" data-dismiss="fileinput">
                                        Vider
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                @*<div class="form-group last">
                    <label class="col-md-3 control-label ltvarev tvarev">Montant TVA<span class="required">*</span></label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(c => c.MNTTVAREV, new { @class = "form-control tvarev" })
                    </div>
                </div>

                <div class="form-group last">
                    <label class="col-md-3 control-label tvataux">TAUX TVA<span class="required">*</span></label>
                    <div class="col-md-4">
                        @Html.DropDownListFor(c => c.TAUXTVA, new SelectList(ViewBag.listtva, "IDTAUXTVA", "LIBELLETAUXTVA"), new { @class = "form-control form-filter input-sm required tvataux" })
                    </div>
                </div>*@

                <!-- BEGIN EXAMPLE TABLE PORTLET-->
                    <div class="table-toolbar">
                        <div class="btn-group">
                            <button id="sample_editable_3_new" class="btn red">
                                Ajouter une ligne <i class="fa fa-plus"></i>
                            </button>
                        </div>
                    </div>
                    <table class="table table-striped table-hover table-bordered" id="sample_editable_3">
                        <thead>
                            <tr>
                                <th>
                                    EAN
                                </th>
                                <th>
                                    Désignation
                                </th>
                                <th>
                                    Qté
                                </th>
                                <th class="ttc">
                                    Prix unitaire
                                </th>
                                <th>
                                    Taux TVA
                                </th>
                                <th>
                                    Modifier
                                </th>
                                <th>
                                    Supprimer
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.FACTDEMANDEDETAIL)
                            {
                                <tr>
                                    <td>
                                        @item.REFERENCEPRODUIT
                                    </td>
                                    <td>
                                        @item.LIBELLEPRODUIT
                                    </td>
                                    <td>
                                        @item.QUANTITE
                                    </td>
                                    <td>
                                        @item.PRIXUNITAIRE.ToString().Replace(",", ".")
                                    </td>
                                    <td>
                                        @item.TAUXTVA
                                    </td>
                                    <td>
                                        <a class="edit" href="">Modifier</a>
                                    </td>
                                    <td>
                                        <a class="delete" href="">Supprimer</a>
                                    </td>
                                </tr>
                            }
                        </tbody>

                    </table>


            </div>
            <div class="form-actions fluid">
                <div class="col-md-offset-3 col-md-9">

                    <button type="button" class="btn submit red">
                        @if (actionName == "Create2")
                        {<text>Insérer</text>}
                        else
                        {<text>Modifier</text>}
                    </button>
                    <a href="@Url.Action("Index", new { keepFilters = true})" class="btn default">Annuler</a>

                </div>
            </div>
        }
        <div id="idvalid" class="modal fade" role="dialog">

            <div class="modal-header" style="padding:15px;padding-bottom:0;border:0;">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Validation réclamation</h4>
            </div>
            <div class="modal-body" style="padding:15px;padding-bottom:0;border:0;">
                @using (Html.BeginForm("AjoutClient", "Demande", FormMethod.Post, new { @class = "addclient form-horizontal" }))
                {
                    @Html.Hidden("id", Model.IDDEMANDE)
                    @Html.Hidden("returnUrl", this.Request.RawUrl)
                    <div class="form-body">
                        <div class="form-group">
                            <label class="control-label">Reference client<span class="required">*</span></label>
                            <div class="input-icon">
                                <input type="text" class="form-control required" maxlength="30" id="refclient" name="refclient" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Désignation client<span class="required">*</span></label>
                            <div class="input-icon">
                                <input type="text" class="form-control required" maxlength="50" id="libclient" name="libclient" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label noice">ICE client<span class="required">*</span></label>
                            <div class="input-icon">
                                <input type="text" class="form-control required" name="iceclient" id="iceclient" maxlength="15" list="cityname">
                                <datalist id="cityname">
                                    <option value="---sans  ice---">
                                </datalist>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Adresse facturation<span class="required">*</span></label>
                            <div class="input-icon">
                                <textarea class="form-control required" id="adrclient" name="adrclient" maxlength="50" rows="4" cols="50"></textarea>
                            </div>
                        </div>

                        <div style="text-align:center">
                            <button title="Valider" id="Valider" style="padding: 6px 12px;" class="btn submitclient red"><i class="fa fa-save"></i>Valider</button>
                        </div>
                    </div>
                }
            </div>
        </div>
        <!-- END FORM-->
    </div>
</div>
@section Scripts
{
    <script type="text/javascript" src="@Url.Content("~/assets/plugins/jquery-validation/dist/jquery.validate.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/assets/plugins/jquery-validation/dist/additional-methods.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/assets/plugins/select2/select2.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/assets/plugins/data-tables/jquery.dataTables.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/assets/plugins/data-tables/DT_bootstrap.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/assets/scripts/custom/table-editable5.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/assets/plugins/fuelux/js/spinner.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/assets/plugins/bootstrap-modal/js/bootstrap-modalmanager.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/assets/plugins/bootstrap-modal/js/bootstrap-modal.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/assets/scripts/custom/ui-extended-modals.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/assets/plugins/jquery.blockui.min.js")"></script>
    <script>
        jQuery(document).ready(function () {
            TableEditable3.init();

        $(".addclient").validate({
        });

        //$.validator.addMethod("loginValid", function (value, element, arg) {
        //    return arg != value;
        //}, "Cet identifiant est déjà utilisé, merci de choisir un autre !");

        $('.submit').click(function (e) {
            var vvuser= "@User.IsInRole("SIEGE")";
                if (
                    ($('#TYPECLIENT').val() == 2 && ($('#IDCLIENT').val() == "" | $('#IDCLIENT').val() == "-1")) ||
                    ($('#TYPECLIENT').val() == 1 && ($('#IDCLIENTINTERNE').val() == "" | $('#IDCLIENTINTERNE').val() == "-1"))
                    )
                    alert("Le choix du client est obligatoire.");
                else if (vvuser && ($('#IDSITE').val() == "" | $('#IDSITE').val() == "-1")){
                    alert("Le choix de l acheteur est obligatoire.");
                } else {

                    var categorie = $('#IDCAT option:selected').val().split(',')[1];
                    var jsonText;
                    var dataenvoie;
                    var oTable2 = $('#sample_editable_3').dataTable();
                    oDATA = oTable2._fnGetDataMaster();
                    dataenvoie = new Array(oDATA.length);
                    for (var i = 0; i < oDATA.length; i++) {
                        var l1 = oDATA[i];
                        var l2 = new Array(4);
                        for (var j = 0; j < 4; j++) {
                            l2[j] = l1[j];
                        }
                        dataenvoie[i] = l2;
                    }
                    //$('#selectedDetails').val(oDATA);
                    jsonText = JSON.stringify(dataenvoie).replace(/'/g, "-APO-");
                    $('.EditForm').append("<input type='hidden' name='selectedDetails' value='" + jsonText + "' />");
            $.ajax({
                type: "POST",
                url: "@Url.Action("isCnufClientExist", "Demande")",
                content: "application/text; charset=utf-8",
                data: { cnuf: $('#CNUFVENDEUR').val(), chapitre: $('#IDCAT option:selected').val().split(',')[1] },
                success: function (d) {
                if (d == "True") {
                    if ($('#TYPECLIENT').val() == 2) {
                        $('.EditForm').submit();
                    }else{
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("isCnufFrsExist", "Demande")",
                            content: "application/text; charset=utf-8",
                            data: { cnuf: $('#CNUFACHETEUR').val(), chapitre: $('#IDCAT option:selected').val().split(',')[1] },
                            success: function (d) {
                                if (d == "True") {
                                    $('.EditForm').submit();
                                } else {
                                    alert("Le cnuf acheteur est innexistant !!!")
                                }
                            },
                            error: function (xhr, textStatus, errorThrown) {
                                // TODO: Show error
                                alert('Erreur réseau : merci de réessayer');
                            }
                        });
                    }
                } else {
                    alert("Le cnuf vendeur est innexistant !!!")
                }
            },
            error: function (xhr, textStatus, errorThrown) {
                // TODO: Show error
                alert('Erreur réseau : merci de réessayer');
            }
        });


    }
    });

    jQuery.extend(jQuery.validator.messages, {
        required: "Ce champ est obligatoire.",
        number: "Merci d'entrer un chiffre valide.",
        email: "Merci de renseigner un email valide.",
        minlength: "Longueur ne doit pas être inférieur à {0}",
        maxlength: "Longueur ne doit pas dépasser {0}"
    });

    $('.submitclient').validate({
        errorElement: 'span', //default input error message container
        errorClass: 'help-block', // default input error message class
        focusInvalid: false, // do not focus the last invalid input
        ignore: "",
        rules: {
            iceclient: {
                minlength: 15,
                maxlength: 15
            },
            libclient: {
                maxlength: 50
            },
            refclient: {
                maxlength: 30
            }
        },
        invalidHandler: function (event, validator) { //display error alert on form submit
            $('.alert-success').hide();
            $('.alert-danger').show();
        },
        highlight: function (element) { // hightlight error inputs
            $(element).closest('.form-group').removeClass('has-success').addClass('has-error'); // set error class to the control group
        },
        unhighlight: function (element) { // revert the change done by hightlight
            //$(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set error class to the control group

        },
        success: function (label, element) {
            //var icon = $(element).parent('.input-icon').children('i');
            //$(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
            //icon.removeClass("fa-warning").addClass("fa-check");
        }
    });

    $('.EditForm').validate({
        errorElement: 'span', //default input error message container
        errorClass: 'help-block', // default input error message class
        focusInvalid: false, // do not focus the last invalid input
        ignore: "",
        rules: {
            ANNEEPRESTATION: {
                minlength: 4,
                maxlength: 4
            },
            RAYONACHETEUR: {
                maxlength: 4
            },
            RAYON: {
                maxlength: 4
            }
        },
        invalidHandler: function (event, validator) { //display error alert on form submit
            $('.alert-success').hide();
            $('.alert-danger').show();
        },
        highlight: function (element) { // hightlight error inputs
            $(element).closest('.form-group').removeClass('has-success').addClass('has-error'); // set error class to the control group
        },
        unhighlight: function (element) { // revert the change done by hightlight
            //$(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set error class to the control group

        },
        success: function (label, element) {
            //var icon = $(element).parent('.input-icon').children('i');
            //$(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
            //icon.removeClass("fa-warning").addClass("fa-check");
        }
    });
    @if (TempData["message"] != null)
            {
                <text>alert('@Html.Raw(TempData["message"].ToString())');</text>
            }

    });

    if ($('#TYPECLIENT').val() == 1) {
        $('.externe').addClass('hidden');
        $('.interne').removeClass('hidden');
    } else {
        $('.externe').removeClass('hidden');
        $('.interne').addClass('hidden');
    }

    $('#TYPECLIENT').on('change', function () {
        if (this.value == 1) {
            $('.externe').addClass('hidden');
            $('.interne').removeClass('hidden');
        } else {
            $('.externe').removeClass('hidden');
            $('.interne').addClass('hidden');
        }
    });

    </script>
    <script src="@Url.Content("~/assets/plugins/bootstrap-fileinput/bootstrap-fileinput.js")" type="text/javascript"></script>
}
@section Styles
{
    <link href="@Url.Content("~/assets/plugins/bootstrap-fileinput/bootstrap-fileinput.css")" rel="stylesheet" type="text/css" />
    <style>
        .page-content .page-breadcrumb.breadcrumb {
            background-color: #e02222;
        }
    </style>
}